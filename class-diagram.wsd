@startuml TechReliefClassDiagram

class USER {
 -passwordHash : string
 +id : string
 +email : string 
 +contactNumber : string
 +registrationDate: string
 +userType : string
 +physicalAddress : string
 +signup(email, password) : void
 +completeProfile(firstName, lastName, contactNumber, userType) : void
 +signin(email, password) : void
 +recoverPassword(email) : void
 +verifyEmail() : void
}

class DONOR {
   +id: string
   +firstName : string
   +lastName : string
   +numberOfDonatedDevices: number
   +updateAccountDetails(userID, accountDetails) : void
   +donateDevice(userID, deviceDetails) : void
   +revokeDevce(userID, deviceID, deviceDetails) : void
   +updateDeviceDetails(userID, deviceID, deviceDetails) : void
}

class NGO {
  +id: string
  +institutionName : string
  +numberOfBeneficiaries : number
  +totalDevicesReceived : number
  +totalDevicesAssigned : number
  +totalDefectiveDevices : number
  +totalRevokedDevices : number
  +registerBeneficiary(beneficiaryDetails) : void
  +deleteUpdateBeneficiary(beneficiaryID) : void
  +updateNGODetails(ngoDetails) : void
  +viewBeneficiaries() : void
  +viewDonatedDevices() : void
  +assignDeviceToBeneficiary(beneficiaryID, deviceID)
  +viewDeviceStatus(deviceID)
}

/' 
 We need the BENEFICIARY entity since they have to also update on the plaform if they really
 received the donated device this helps with the certainty that they were really helped
 and it helps with realistic statistics and record keeping.
'/
class BENEFICIARY {
  +id: string
  +hasDevice : boolean
  +ngoID : string
  +age : number
  +updateDeviceStatus(deviceID) : void
}

class DEVICE {
  +id: string
  +make : string
  +model : string
  +type : string
  +donatedDate : string
  +deviceImageUrl : string
  +description : string
  +donorID : string
  +ngoID : string
  +received : boolean
  +revoked : boolean
}

class ADMIN {
  +email: string
  +passwordHash: string
  +viewNGOs(): void
  +deleteNGO(ngoID): void
  +assignDeviceToNGO: void
}


'Associations
USER ^-- NGO
USER ^-- BENEFICIARY
USER ^-- DONOR

/' 
 Being specific on the next line's association(Aggregation) 
 helps with clearly stating the relation ships between the parent and child.
 So in this case a BENEFICIARY can still exist after a NGO is deleted from the platform
'/

NGO "1..1" *------ "1..*" BENEFICIARY : belongs_to
note right on link #LightSeaGreen
	If a NGO is deleted then the beneficiary 
  shoould also be deleted from the system
end note
DONOR "1..1" -----> "1..*" DEVICE: donates
NGO "1..1" o----> "1..*" DEVICE: assigns
note right on link #LightSeaGreen
	If a NGO is deleted then the device 
  should go back to the donor
end note

/' 
 Can a BENEFICIARY receive more that one device????????
'/
BENEFICIARY "1..1" -----> "1..*" DEVICE: recieves

ADMIN "1..1" ------> "1..*" DEVICE: re-assings

ADMIN "1..1" ------> "1..*" NGO: manages

@enduml